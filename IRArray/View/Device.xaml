<UserControl x:Class="IRArray.Device"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:IRArray"
             mc:Ignorable="d" 
             d:DesignHeight="600" d:DesignWidth="560" Height="986">
    <UserControl.Resources>
        <!-- 物件 -->
        <SolidColorBrush x:Key="Obj_Backgroud" Color="#FF828CB8"/>
        <SolidColorBrush x:Key="Obj_Foreground" Color="#FFB8BEE8"/>
        <SolidColorBrush x:Key="Obj_BorderBrush" Color="#FF828CB8"/>
        <!-- 顏色 -->
        <SolidColorBrush x:Key="Green" Color="#57B56C"/>
        <SolidColorBrush x:Key="Red" Color="#F1726D"/>
        <SolidColorBrush x:Key="White" Color="#FFFFFF"/>
        <Style x:Key="RadioButtonStyle" TargetType="{x:Type RadioButton}">
            <Setter Property="Margin" Value="0,5"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Foreground" Value="{DynamicResource Obj_Foreground}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="24"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Image x:Name="Image" Grid.Column="0" Height="20" Source="../Image/icon_checkbox_off.png"/>
                            <ContentPresenter Grid.Column="2" VerticalAlignment="Center"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="Image" Property="Source" Value="../Image/icon_multiple_choice_on.png"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RadioButtonStyle1" BasedOn="{StaticResource RadioButtonStyle}" TargetType="{x:Type RadioButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="24"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Image x:Name="Image" Grid.Column="0" Height="20" Source="../Image/icon_checkbox_off.png"/>
                            <ContentPresenter Grid.Column="2" VerticalAlignment="Center"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="Image" Property="Source" Value="../Image/icon_checkbox_on.png"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="CheckBoxStyle" TargetType="{x:Type CheckBox}">
            <!--<EventSetter Event="Button.Click" Handler="RadioButton_MouseDown"/>-->
            <Setter Property="Margin" Value="0,5"/>
            <Setter Property="Height" Value="56"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Foreground" Value="{DynamicResource Obj_Foreground}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="24"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Image x:Name="Image" Grid.Column="0" Height="20" Source="../Image/icon_checkbox_off.png"/>
                            <ContentPresenter Grid.Column="2" VerticalAlignment="Center"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="Image" Property="Source" Value="../Image/icon_checkbox_on.png"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="SwitchStyle" TargetType="{x:Type CheckBox}">
            <Setter Property="Margin" Value="0,5"/>
            <Setter Property="Height" Value="56"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Image x:Name="Image" Grid.Column="0" Height="28" Source="../Image/switch_off.png"/>
                            <ContentPresenter Grid.Column="2" VerticalAlignment="Center"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="Image" Property="Source" Value="../Image/switch_on.png"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Border x:Name="Border" Background="Transparent" BorderBrush="{DynamicResource Obj_BorderBrush}" BorderThickness="1" CornerRadius="2">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="30"/>
                    </Grid.ColumnDefinitions>
                    <Image Grid.Column="2" Height="6" Source="../Image/com_icon_arrow_down_n.png"/>
                </Grid>
            </Border>
        </ControlTemplate>
        <ControlTemplate x:Key="ComboBoxToggleButton1" TargetType="{x:Type ToggleButton}">
            <Border x:Name="Border" Background="{DynamicResource Obj_LinearBackgroud}" BorderBrush="{DynamicResource Obj_BorderBrush}" BorderThickness="1" CornerRadius="2">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="24"/>
                    </Grid.ColumnDefinitions>
                    <Image Grid.Column="2" Height="24" Source="../Image/com_icon_flat_arrow_down.png"/>
                </Grid>
            </Border>
        </ControlTemplate>
        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
            <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}"/>
        </ControlTemplate>
        <Style x:Key="ComboBoxStyle" TargetType="{x:Type ComboBox}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
            <Setter Property="Height" Value="54"/>
            <Setter Property="Width" Value="480"/>
            <Setter Property="DisplayMemberPath" Value="Text"/>
            <Setter Property="SelectedValuePath" Value="Value"/>
            <Setter Property="SelectedIndex" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver"/>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="EditStates">
                                    <VisualState x:Name="Editable"/>
                                    <VisualState x:Name="Uneditable"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ToggleButton x:Name="ToggleButton" Grid.Column="2" Template="{StaticResource ComboBoxToggleButton}" Focusable="False" ClickMode="Press"
                            IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <ContentPresenter x:Name="ContentSite" Margin="10,3" VerticalAlignment="Center" HorizontalAlignment="Left" IsHitTestVisible="False"
                            TextBlock.Foreground="{DynamicResource White}"
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}">
                            </ContentPresenter>
                            <TextBox x:Name="PART_EditableTextBox" Style="{x:Null}"
                            Margin="3,3,23,3" VerticalAlignment="Bottom" HorizontalAlignment="Left" Focusable="True" Background="Transparent" Visibility="Hidden"
                            Template="{StaticResource ComboBoxTextBox}"
                            IsReadOnly="{TemplateBinding IsReadOnly}" />
                            <Popup x:Name="Popup" Placement="Bottom" Focusable="False" AllowsTransparency="True" PopupAnimation="Slide"
                            IsOpen="{TemplateBinding IsDropDownOpen}">
                                <Grid x:Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder" BorderThickness="1">
                                        <Border.BorderBrush>
                                            <SolidColorBrush Color="{DynamicResource BorderMediumColor}" />
                                        </Border.BorderBrush>
                                        <Border.Background>
                                            <SolidColorBrush Color="{DynamicResource ControlLightColor}" />
                                        </Border.Background>
                                    </Border>
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder"  Property="MinHeight" Value="95"/>
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                            </Trigger>
                            <Trigger SourceName="Popup" Property="AllowsTransparency" Value="true">
                                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="2" />
                                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="{x:Type ComboBoxItem}">
                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                                    <Border x:Name="Border" Padding="2" SnapsToDevicePixels="True" Background="Transparent">
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CommonStates">
                                                <VisualState x:Name="Normal"/>
                                                <VisualState x:Name="Selected"/>
                                                <VisualState x:Name="Disabled"/>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition/>
                                                <ColumnDefinition/>
                                            </Grid.ColumnDefinitions>
                                            <ContentPresenter/>
                                            <Image Name="Image" Grid.Column="2" HorizontalAlignment="Right" Height="14" Width="14" Source="../Image/icon_pulldown_check_n.png" Visibility="Collapsed"/>
                                        </Grid>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Visibility" TargetName="Image" Value="Visible"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Panel.Background" TargetName="Border" Value="{DynamicResource Green}"/>
                                            <Setter Property="TextElement.Foreground" TargetName="Border" Value="{DynamicResource Obj_Foreground}"/>
                                            <Setter TargetName="Image" Property="Source" Value="../Image/icon_pulldown_check_hover.png"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ComboBoxStyle1" BasedOn="{StaticResource ComboBoxStyle}" TargetType="{x:Type ComboBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver"/>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="EditStates">
                                    <VisualState x:Name="Editable"/>
                                    <VisualState x:Name="Uneditable"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ToggleButton x:Name="ToggleButton" Grid.Column="2" Template="{StaticResource ComboBoxToggleButton1}" Focusable="False" ClickMode="Press"
                            IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <ContentPresenter x:Name="ContentSite" Margin="10,3" VerticalAlignment="Center" HorizontalAlignment="Left" IsHitTestVisible="False"
                            TextBlock.Foreground="{DynamicResource White}"
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}">
                            </ContentPresenter>
                            <TextBox x:Name="PART_EditableTextBox" Style="{x:Null}"
                            Margin="3,3,23,3" VerticalAlignment="Bottom" HorizontalAlignment="Left" Focusable="True" Background="Transparent" Visibility="Hidden"
                            Template="{StaticResource ComboBoxTextBox}"
                            IsReadOnly="{TemplateBinding IsReadOnly}" />
                            <Popup x:Name="Popup" Placement="Bottom" Focusable="False" AllowsTransparency="True" PopupAnimation="Slide"
                            IsOpen="{TemplateBinding IsDropDownOpen}">
                                <Grid x:Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder" BorderThickness="1">
                                        <Border.BorderBrush>
                                            <SolidColorBrush Color="{DynamicResource BorderMediumColor}" />
                                        </Border.BorderBrush>
                                        <Border.Background>
                                            <SolidColorBrush Color="{DynamicResource ControlLightColor}" />
                                        </Border.Background>
                                    </Border>
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder"  Property="MinHeight" Value="95"/>
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                            </Trigger>
                            <Trigger SourceName="Popup" Property="AllowsTransparency" Value="true">
                                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="2" />
                                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="PHTextBoxStyle" TargetType="{x:Type local:PHTextBox}">
            <Setter Property="Height" Value="54"/>
            <Setter Property="Width" Value="Auto"/>
            <Setter Property="ObjBorderBrush" Value="{DynamicResource Obj_BorderBrush}"/>
            <Setter Property="Foreground" Value="{DynamicResource Obj_Foreground}"/>
            <Setter Property="FocusBrush" Value="{DynamicResource Green}"/>
            <Setter Property="ObjToggleSize" Value="28"/>
            <Setter Property="ImageSize" Value="14"/>
            <Setter Property="Source" Value="../Image/com_icon_empty_n.png"/>
        </Style>
        <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Height" Value="54"/>
            <Setter Property="Width" Value="226"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Content" Value="保存"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Border Background="{DynamicResource Green}" CornerRadius="2">
                                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" TextBlock.Foreground="{DynamicResource Btn_Foreground}" RecognizesAccessKey="True"/>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyle1" BasedOn="{StaticResource ButtonStyle}" TargetType="{x:Type Button}">
            <Setter Property="Content" Value="取消"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Border Background="Transparent" BorderBrush="{DynamicResource Obj_BorderBrush}" BorderThickness="1" CornerRadius="2">
                                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" TextBlock.Foreground="{DynamicResource White}" RecognizesAccessKey="True"/>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyle2" BasedOn="{StaticResource ButtonStyle}" TargetType="{x:Type Button}">
            <Setter Property="Width" Value="184"/>
            <Setter Property="Content" Value="新增连线设备"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="Transparent" BorderBrush="{DynamicResource Obj_BorderBrush}" BorderThickness="1" CornerRadius="2">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Image x:Name="Image" Grid.Column="0" Margin="17,0,12,0" Height="28" Source="../Image/icon_add_n.png"/>
                                <ContentPresenter Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Center" TextBlock.Foreground="{DynamicResource White}" RecognizesAccessKey="True"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Image" Property="Source" Value="../Image/icon_add_p.png"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyle3" BasedOn="{StaticResource ButtonStyle}" TargetType="{x:Type Button}">
            <Setter Property="Width" Value="128"/>
            <Setter Property="Content" Value="保存"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{DynamicResource Green}" CornerRadius="2">
                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" TextBlock.Foreground="{DynamicResource White}" RecognizesAccessKey="True"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyle4" BasedOn="{StaticResource ButtonStyle}" TargetType="{x:Type Button}">
            <Setter Property="Width" Value="128"/>
            <Setter Property="Content" Value="刪除"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{DynamicResource Red}" CornerRadius="2">
                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" TextBlock.Foreground="{DynamicResource White}" RecognizesAccessKey="True"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="10"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="105"/>
            <RowDefinition Height="64"/>
            <RowDefinition Height="45"/>
            <RowDefinition Height="64"/>
            <RowDefinition Height="64"/>
            <RowDefinition Height="45"/>
            <RowDefinition Height="64"/>
            <RowDefinition Height="64"/>
            <RowDefinition Height="64"/>
            <RowDefinition Height="85"/>
            <RowDefinition Height="64"/>
        </Grid.RowDefinitions>
        <TextBlock Grid.Column="0" Grid.Row="1" VerticalAlignment="Center" Text="连线设备" Foreground="{DynamicResource Obj_Foreground}"/>
        <ComboBox x:Name="ComboBox1" Grid.Column="2" Grid.Row="1" Style="{DynamicResource ComboBoxStyle}"/>
        <RadioButton x:Name="RadioButton1" Grid.Column="2" Grid.Row="2" Content="Wi-Fi" Style="{DynamicResource RadioButtonStyle1}"/>
        <TextBlock Grid.Column="0" Grid.Row="3" VerticalAlignment="Center" Text="IP Addresss" Foreground="{DynamicResource Obj_Foreground}"/>
        <local:PHTextBox x:Name="PHTextBox1" Grid.Column="2" Grid.Row="3" Placeholder="请输入" Style="{DynamicResource PHTextBoxStyle}"/>
        <TextBlock Grid.Column="0" Grid.Row="4" VerticalAlignment="Center" Text="Port" Foreground="{DynamicResource Obj_Foreground}"/>
        <local:PHTextBox x:Name="PHTextBox2" Grid.Column="2" Grid.Row="4" Placeholder="请输入" Style="{DynamicResource PHTextBoxStyle}"/>
        <RadioButton x:Name="RadioButton2" Grid.Column="2" Grid.Row="5" Content="UART" Style="{DynamicResource RadioButtonStyle1}"/>
        <TextBlock Grid.Column="0" Grid.Row="6" VerticalAlignment="Center" Text="COMNum" Foreground="{DynamicResource Obj_Foreground}"/>
        <ComboBox x:Name="ComboBox2" Grid.Column="2" Grid.Row="6" Style="{DynamicResource ComboBoxStyle}"/>
        <TextBlock Grid.Column="0" Grid.Row="7" VerticalAlignment="Center" Text="Baud" Foreground="{DynamicResource Obj_Foreground}"/>
        <ComboBox x:Name="ComboBox3" Grid.Column="2" Grid.Row="7" Style="{DynamicResource ComboBoxStyle}"/>
        <TextBlock Grid.Column="0" Grid.Row="8" VerticalAlignment="Center" Text="UART Config" Foreground="{DynamicResource Obj_Foreground}"/>
        <ComboBox x:Name="ComboBox4" Grid.Column="2" Grid.Row="8" Style="{DynamicResource ComboBoxStyle}"/>
        <Grid Grid.Column="2" Grid.Row="10" VerticalAlignment="Bottom">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Button x:Name="Insert" Grid.Column="0" Style="{DynamicResource ButtonStyle2}"/>
            <Button x:Name="Delete" Grid.Column="1" Style="{DynamicResource ButtonStyle4}"/>
            <Button x:Name="Save" Grid.Column="2" Style="{DynamicResource ButtonStyle3}"/>
        </Grid>
    </Grid>
</UserControl>

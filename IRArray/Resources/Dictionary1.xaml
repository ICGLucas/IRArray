<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:IRArray">
    <!--==================== Font ====================-->
    <!--字體-->
    <Style x:Key="WindowStyle" TargetType="{x:Type Window}">
        <Setter Property="Control.FontSize" Value="18"/>
    </Style>


    <!--==================== Color ====================-->
    <!--介面背景-->
    <SolidColorBrush x:Key="Main_Backgroud" Color="#2B3763"/>
    <!--Menu背景色-->
    <SolidColorBrush x:Key="MenuBar_Backgroud" Color="#17224D"/>
    <!--物件顏色-->
    <SolidColorBrush x:Key="Obj_Backgroud" Color="#828CB8"/>
    <SolidColorBrush x:Key="Obj_Foreground" Color="#B8BEE8"/>
    <SolidColorBrush x:Key="Obj_BorderBrush" Color="#828CB8"/>
    <!--漸層-->
    <LinearGradientBrush x:Key="Obj_LinearBackgroud" StartPoint="1,0" EndPoint="1,1">
        <GradientStop Color="#FF475489" Offset="0.0" />
        <GradientStop Color="#FF2E3A68" Offset="1.0" />
    </LinearGradientBrush>

    <!--按鍵-->
    <SolidColorBrush x:Key="Btn_Backgroud" Color="#FF57B56C"/>
    <SolidColorBrush x:Key="Btn_Foreground" Color="#FFF2F3F3"/>
    <!--Prompt-->
    <SolidColorBrush x:Key="PromptBox_Foreground" Color="#FF2B3763"/>
    <SolidColorBrush x:Key="PromptBox_Separator" Color="#FFDDDEE7"/>
    <SolidColorBrush x:Key="PromptBox_BtnForeground" Color="#FF57B56C"/>

    <!--顏色-->
    <SolidColorBrush x:Key="Green" Color="#57B56C"/>
    <SolidColorBrush x:Key="White" Color="#FFFFFF"/>
    <SolidColorBrush x:Key="Red" Color="#F1726D"/>
    <!--Control Colors-->
    <Color x:Key="ControlLightColor">White</Color>
    <!--Border Colors-->
    <Color x:Key="BorderMediumColor">#FF888888</Color>


    <!--==================== Thumb ====================-->
    <!--Thumb-->
    <Style x:Name="ThumbStyle" TargetType = "{x:Type Thumb}" >
        <!--<EventSetter Event="PreviewMouseLeftButtonDown" Handler="thumb_PreviewMouseLeftButtonDown"/>-->
        <Setter Property="Control.Background" Value="Red"/>
        <Setter Property="Control.Opacity" Value="0"/>
        <Setter Property="Grid.Column" Value="0"/>
        <Setter Property="Grid.ColumnSpan" Value="3"/>
        <Setter Property="Grid.Row" Value="0"/>
        <Setter Property="Grid.RowSpan" Value="2"/>
    </Style>


    <!--==================== Container ====================-->
    <!--ControlTemplate ScrollViewer-->
    <ControlTemplate x:Key="ControlTemplate_ScrollViewer" TargetType="{x:Type ScrollViewer}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <ScrollContentPresenter Grid.Column="0"/>
            <ScrollBar Grid.Column="1" Opacity="0.5" MinWidth="0" Width="0"                                
                               Value="{TemplateBinding VerticalOffset}" Maximum="{TemplateBinding ScrollableHeight}"
                               ViewportSize="{TemplateBinding ViewportHeight}"
                               Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
        </Grid>
    </ControlTemplate>

    <!--ScrollViewer-->
    <Style x:Key="ScrollViewerStyle" TargetType="{x:Type ScrollViewer}">
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="Control.Template" Value="{DynamicResource ControlTemplate_ScrollViewer}"/>
    </Style>


    <!--StackPanel-->
    <Style x:Key="StackPanelStyle_PromptBox" TargetType="{x:Type StackPanel}">
        <Setter Property="Control.Background" Value="#000000"/>
        <Setter Property="Control.Opacity" Value="0.5"/>
        <Setter Property="Control.Visibility" Value="Collapsed"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=Visibility,ElementName=PromptBox1}" Value="Visible">
                <Setter Property="Control.Visibility" Value="Visible"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Visibility,ElementName=PromptBox2}" Value="Visible">
                <Setter Property="Control.Visibility" Value="Visible"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>


    <!--==================== Object ====================-->
    <!--Image-->
    <Style x:Key="ImageStyle" TargetType="{x:Type Image}">
        <Setter Property="FrameworkElement.Height" Value="1"/>
        <Setter Property="Source" Value="../Image/icon_regional_settings_n Copy.png"/>
    </Style>
    <Style x:Key="ImageStyle_Logo" TargetType="{x:Type Image}">
        <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center"/>
        <Setter Property="FrameworkElement.Height" Value="18"/>
        <Setter Property="Source" Value="../Image/logo.png"/>
    </Style>
    <Style x:Key="ImageStyle_Option" TargetType="{x:Type Image}">
        <Setter Property="FrameworkElement.Height" Value="32"/>
        <Setter Property="Control.Cursor" Value="Hand"/>
    </Style>
    <Style x:Key="ImageStyle_Narrow" BasedOn="{StaticResource ImageStyle_Option}" TargetType="{x:Type Image}">
        <Setter Property="Source" Value="../Image/icon_narrow_default.png"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Source" Value="../Image/icon_narrow_active.png"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ImageStyle_Close" BasedOn="{StaticResource ImageStyle_Option}" TargetType="{x:Type Image}">
        <Setter Property="Source" Value="../Image/icon_close_default.png"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Source" Value="../Image/icon_close_active.png"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ImageStyle_Monitor" TargetType="{x:Type Image}">
        <Setter Property="FrameworkElement.Height" Value="24"/>
        <Setter Property="FrameworkElement.Width" Value="32"/>
        <Setter Property="Source" Value="{Binding Source}"/>
        <Setter Property="Image.ClipToBounds" Value="True"/>
        <Setter Property="Effect">
            <Setter.Value>
                <BlurEffect Radius="1" KernelType="Gaussian" RenderingBias="Performance"/>
            </Setter.Value>
        </Setter>
    </Style>


    <!--==================== Object Display ====================-->
    <!--TextBlock-->
    <Style x:Key="TextBlockStyle1" TargetType="{x:Type TextBlock}">
        <Setter Property="FrameworkElement.Margin" Value="0.4,0,0,0"/>
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
        <Setter Property="Control.Foreground" Value="White"/>
        <Setter Property="Control.FontSize" Value="0.8"/>
    </Style>
    <Style x:Key="TextBlockStyle2" TargetType="{x:Type TextBlock}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Foreground" Value="{DynamicResource Obj_Foreground}"/>
    </Style>
    <Style x:Key="TextBlockStyle3" TargetType="{x:Type TextBlock}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="{DynamicResource Obj_Foreground}"/>
    </Style>


    <!--==================== Object Click ====================-->
    <!--ControlTemplate Button-->
    <ControlTemplate x:Key="ControlTemplate_Button1"  TargetType="{x:Type Button}">
        <Grid>
            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" CornerRadius="2">
                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" TextBlock.Foreground="{TemplateBinding Foreground}" RecognizesAccessKey="True"/>
            </Border>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="ControlTemplate_Button2" TargetType="{x:Type Button}">
        <Border Background="Transparent" BorderBrush="{DynamicResource Obj_BorderBrush}" BorderThickness="1" CornerRadius="2">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Image x:Name="Image" Grid.Column="0" Margin="17,0,12,0" Height="28" Source="../Image/icon_add_n.png"/>
                <ContentPresenter Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Center" TextBlock.Foreground="{DynamicResource White}" RecognizesAccessKey="True"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Image" Property="Source" Value="../Image/icon_add_p.png"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ControlTemplate_Button3"  TargetType="{x:Type Button}">
        <Grid>
            <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" CornerRadius="2">
                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" TextBlock.Foreground="{TemplateBinding Foreground}" RecognizesAccessKey="True"/>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="Tag" Value="1">
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource Green}"/>
                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource Green}"/>
                <Setter Property="Foreground" Value="{DynamicResource White}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--Button-->
    <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FrameworkElement.SnapsToDevicePixels" Value="True"/>
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
        <Setter Property="Control.FontSize" Value="18"/>
        <Setter Property="Control.Cursor" Value="Hand"/>
    </Style>
    
    <Style x:Key="ButtonStyle1" BasedOn="{StaticResource ButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="FrameworkElement.Height" Value="54"/>
        <Setter Property="FrameworkElement.Width" Value="226"/>
        <Setter Property="Control.BorderBrush" Value="{DynamicResource Obj_BorderBrush}"/>
        <Setter Property="Control.Foreground" Value="{DynamicResource Btn_Foreground}"/>
        <Setter Property="Control.Background" Value="{DynamicResource Green}"/>
        <Setter Property="Control.Template" Value="{DynamicResource ControlTemplate_Button1}"/>
    </Style>
    <Style x:Key="ButtonStyle2" BasedOn="{StaticResource ButtonStyle1}" TargetType="{x:Type Button}">
        <Setter Property="Control.BorderBrush" Value="{DynamicResource Red}"/>
        <Setter Property="Control.Foreground" Value="{DynamicResource Btn_Foreground}"/>
        <Setter Property="Control.Background" Value="{DynamicResource Red}"/>
        <Setter Property="Control.Template" Value="{DynamicResource ControlTemplate_Button1}"/>
    </Style>
    
    <Style x:Key="ButtonStyle3" BasedOn="{StaticResource ButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="FrameworkElement.Height" Value="54"/>
        <Setter Property="FrameworkElement.Width" Value="128"/>
        <Setter Property="Control.BorderBrush" Value="{DynamicResource Green}"/>
        <Setter Property="Control.Foreground" Value="{DynamicResource Btn_Foreground}"/>
        <Setter Property="Control.Background" Value="{DynamicResource Green}"/>
        <Setter Property="Control.Template" Value="{DynamicResource ControlTemplate_Button1}"/>
    </Style>
    <Style x:Key="ButtonStyle4" BasedOn="{StaticResource ButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="FrameworkElement.Height" Value="54"/>
        <Setter Property="FrameworkElement.Width" Value="128"/>
        <Setter Property="Control.BorderBrush" Value="{DynamicResource Red}"/>
        <Setter Property="Control.Foreground" Value="{DynamicResource White}"/>
        <Setter Property="Control.Background" Value="{DynamicResource Red}"/>
        <Setter Property="Control.Template" Value="{DynamicResource ControlTemplate_Button1}"/>
    </Style>
    <Style x:Key="ButtonStyle5" BasedOn="{StaticResource ButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="FrameworkElement.Height" Value="54"/>
        <Setter Property="FrameworkElement.Width" Value="184"/>
        <Setter Property="Control.BorderBrush" Value="{DynamicResource Obj_BorderBrush}"/>
        <Setter Property="Control.Foreground" Value="{DynamicResource White}"/>
        <Setter Property="Control.Template" Value="{DynamicResource ControlTemplate_Button2}"/>
    </Style>
    
    <Style x:Key="ButtonStyle6" BasedOn="{StaticResource ButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="FrameworkElement.Height" Value="44"/>
        <Setter Property="FrameworkElement.Width" Value="128"/>
        <Setter Property="Control.BorderBrush" Value="{DynamicResource Green}"/>
        <Setter Property="Control.Foreground" Value="{DynamicResource White}"/>
        <Setter Property="Control.Background" Value="{DynamicResource Green}"/>
        <Setter Property="Control.Template" Value="{DynamicResource ControlTemplate_Button1}"/>
    </Style>
    <Style x:Key="ButtonStyle7" BasedOn="{StaticResource ButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="FrameworkElement.Height" Value="44"/>
        <Setter Property="FrameworkElement.Width" Value="128"/>
        <Setter Property="Control.BorderBrush" Value="{DynamicResource Obj_BorderBrush}"/>
        <Setter Property="Control.Foreground" Value="{DynamicResource White}"/>
        <Setter Property="Control.Template" Value="{DynamicResource ControlTemplate_Button1}"/>
    </Style>
    <Style x:Key="ButtonStyle8" BasedOn="{StaticResource ButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="FrameworkElement.Height" Value="44"/>
        <Setter Property="FrameworkElement.Width" Value="120"/>
        <Setter Property="Control.BorderBrush" Value="{DynamicResource Obj_BorderBrush}"/>
        <Setter Property="Control.Foreground" Value="{DynamicResource Obj_Foreground}"/>
        <Setter Property="Control.Template" Value="{DynamicResource ControlTemplate_Button3}"/>
    </Style>
    <Style x:Key="ButtonStyle9" BasedOn="{StaticResource ButtonStyle}" TargetType="{x:Type Button}">
        <Setter Property="FrameworkElement.Height" Value="28"/>
        <Setter Property="FrameworkElement.Width" Value="55"/> 
        <Setter Property="Control.BorderBrush" Value="{DynamicResource Obj_BorderBrush}"/>
        <Setter Property="Control.Foreground" Value="{DynamicResource Obj_Foreground}"/>
        <Setter Property="Control.Background" Value="{DynamicResource Obj_LinearBackgroud}"/>
        <Setter Property="Control.Template" Value="{DynamicResource ControlTemplate_Button3}"/>
    </Style>
    

    <!--==================== Object Selected ====================-->
    <!--ControlTemplate RadioButton-->
    <ControlTemplate x:Key="ControlTemplate_RadioButton1" TargetType="{x:Type RadioButton}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="4"/>
            </Grid.RowDefinitions>
            <Rectangle x:Name="Rectangle1" Fill="{DynamicResource Green}" Grid.Row="0" Opacity="0"/>
            <Rectangle x:Name="Rectangle2" Fill="{DynamicResource Green}" Grid.Row="1" Opacity="0"/>
            <ContentPresenter x:Name="ContentPresenter" Grid.RowSpan="2" VerticalAlignment="Center" HorizontalAlignment="Center" TextBlock.Foreground="{DynamicResource White}" Opacity="0.5"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="Rectangle1" Property="Opacity" Value="0.2"/>
                <Setter TargetName="Rectangle2" Property="Opacity" Value="1"/>
                <Setter TargetName="ContentPresenter" Property="Opacity" Value="1"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="ControlTemplate_RadioButton2" TargetType="{x:Type RadioButton}">
        <Grid>
            <Rectangle x:Name="Rectangle1" Fill="{DynamicResource Green}" Grid.Row="0" Opacity="0"/>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                <Image Margin="5,0" Height="48" Source="../Image/icon_connection_profile.png"/>
                <ContentPresenter x:Name="ContentPresenter" VerticalAlignment="Center" TextBlock.Foreground="{DynamicResource White}" Opacity="1"/>
            </StackPanel>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="Rectangle1" Property="Opacity" Value="1"/>
                <Setter TargetName="ContentPresenter" Property="Opacity" Value="1"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--ControlTemplate RadioButton & CheckBox-->
    <ControlTemplate x:Key="ControlTemplate1">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="24"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Image x:Name="Image" Grid.Column="0" Height="20" Source="../Image/icon_checkbox_off.png"/>
            <ContentPresenter Grid.Column="2" VerticalAlignment="Center" Content="{TemplateBinding ContentControl.Content}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="RadioButton.IsChecked" Value="True">
                <Setter TargetName="Image" Property="Source" Value="../Image/icon_multiple_choice_on.png"/>
            </Trigger>
            <Trigger Property="CheckBox.IsChecked" Value="True">
                <Setter TargetName="Image" Property="Source" Value="../Image/icon_multiple_choice_on.png"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="ControlTemplate2">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="10"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Image x:Name="Image" Grid.Column="0" Height="20" Source="../Image/icon_checkbox_off.png"/>
            <ContentPresenter Grid.Column="2" VerticalAlignment="Center" Content="{TemplateBinding ContentControl.Content}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="RadioButton.IsChecked" Value="True">
                <Setter TargetName="Image" Property="Source" Value="../Image/icon_checkbox_on.png"/>
            </Trigger>
            <Trigger Property="CheckBox.IsChecked" Value="True">
                <Setter TargetName="Image" Property="Source" Value="../Image/icon_checkbox_on.png"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="ControlTemplate3">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Image x:Name="Image" Grid.Column="0" Height="20" Source="../Image/switch_off.png"/>
            <ContentPresenter Grid.Column="1" VerticalAlignment="Center" Content="{TemplateBinding ContentControl.Content}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="RadioButton.IsChecked" Value="True">
                <Setter TargetName="Image" Property="Source" Value="../Image/switch_on.png"/>
            </Trigger>
            <Trigger Property="CheckBox.IsChecked" Value="True">
                <Setter TargetName="Image" Property="Source" Value="../Image/switch_on.png"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <!--RadioButton-->
    <Style x:Key="RadioButtonStyle" TargetType="{x:Type RadioButton}">
        <!--<EventSetter Event="Button.Click" Handler="RadioButton_Click"/>-->
        <Setter Property="FrameworkElement.Margin" Value="0"/>
        <Setter Property="Control.Padding" Value="0"/>
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
        <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center"/>
        <Setter Property="Control.Cursor" Value="Hand"/>
    </Style>
    <Style x:Key="RadioButtonStyle1" BasedOn="{StaticResource RadioButtonStyle}" TargetType="{x:Type RadioButton}">
        <Setter Property="FrameworkElement.Height" Value="64"/>
        <Setter Property="FrameworkElement.Width" Value="240"/>
        <Setter Property="Control.Template" Value="{DynamicResource ControlTemplate_RadioButton1}"/>
    </Style>
    <Style x:Key="RadioButtonStyle2" BasedOn="{StaticResource RadioButtonStyle}" TargetType="{x:Type RadioButton}">
        <Setter Property="FrameworkElement.Height" Value="64"/>
        <Setter Property="FrameworkElement.Width" Value="240"/>
        <Setter Property="Control.Template" Value="{DynamicResource ControlTemplate_RadioButton2}"/>
    </Style>

    <Style x:Key="RadioButtonStyle3" BasedOn="{StaticResource RadioButtonStyle}" TargetType="{x:Type RadioButton}">
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
        <Setter Property="FrameworkElement.HorizontalAlignment" Value="Left"/>
        <Setter Property="FrameworkElement.Height" Value="20"/>
        <Setter Property="Control.Foreground" Value="{DynamicResource Obj_Foreground}"/>
        <Setter Property="Control.Template" Value="{DynamicResource ControlTemplate1}"/>
    </Style>
    <Style x:Key="RadioButtonStyle4" BasedOn="{StaticResource RadioButtonStyle3}" TargetType="{x:Type RadioButton}">
        <Setter Property="Control.Template" Value="{DynamicResource ControlTemplate2}"/>
    </Style>

    <Style x:Key="RadioButtonStyle5" TargetType="{x:Type RadioButton}">
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
        <Setter Property="FrameworkElement.HorizontalAlignment" Value="Left"/>
        <Setter Property="FrameworkElement.Margin" Value="0"/>
        <Setter Property="FrameworkElement.Height" Value="25"/>
        <Setter Property="Control.Cursor" Value="Hand"/>
        <Setter Property="Control.Foreground" Value="{DynamicResource Obj_Foreground}"/>
        <Setter Property="Control.Template" Value="{DynamicResource ControlTemplate2}"/>
    </Style>
    
    
    <!--CheckBox-->
    <Style x:Key="CheckBoxStyle" TargetType="{x:Type CheckBox}">
        <!--<EventSetter Event="Button.Click" Handler="RadioButton_MouseDown"/>-->
        <Setter Property="FrameworkElement.Margin" Value="0"/>
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
        <Setter Property="Control.Cursor" Value="Hand"/>
    </Style>
    <Style x:Key="CheckBoxStyle1" BasedOn="{StaticResource CheckBoxStyle}" TargetType="{x:Type CheckBox}">
        <Setter Property="FrameworkElement.Height" Value="56"/>
        <Setter Property="Control.Foreground" Value="{DynamicResource Obj_Foreground}"/>
        <Setter Property="Control.Template" Value="{DynamicResource ControlTemplate2}"/>
    </Style>
    <Style x:Key="CheckBoxStyle2" BasedOn="{StaticResource CheckBoxStyle}" TargetType="{x:Type CheckBox}">
        <Setter Property="FrameworkElement.Height" Value="56"/>
        <Setter Property="Control.Foreground" Value="{DynamicResource Obj_Foreground}"/>
        <Setter Property="Control.Template" Value="{DynamicResource ControlTemplate3}"/>
    </Style>


    <!--==================== Object DropDown ====================-->
    <!--ControlTemplate ComboBox-->
    <ControlTemplate x:Key="ControlTemplate_ToggleButton1" TargetType="{x:Type ToggleButton}">
        <Border x:Name="Border" Background="Transparent" BorderBrush="{DynamicResource Obj_BorderBrush}" BorderThickness="1" CornerRadius="2">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="30"/>
                </Grid.ColumnDefinitions>
                <Image Grid.Column="2" Height="6" Source="../Image/com_icon_arrow_down_n.png"/>
            </Grid>
        </Border>
    </ControlTemplate>
    <ControlTemplate x:Key="ControlTemplate_ToggleButton2" TargetType="{x:Type ToggleButton}">
        <Border x:Name="Border" Background="{DynamicResource Obj_LinearBackgroud}" BorderBrush="{DynamicResource Obj_BorderBrush}" BorderThickness="1" CornerRadius="2">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="24"/>
                </Grid.ColumnDefinitions>
                <Image Grid.Column="2" Height="24" Source="../Image/com_icon_flat_arrow_down.png"/>
            </Grid>
        </Border>
    </ControlTemplate>
    <ControlTemplate x:Key="ControlTemplate_TextBox" TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}"/>
    </ControlTemplate>
    <ControlTemplate x:Key="ControlTemplate_ComboBox1" TargetType="{x:Type ComboBox}">
        <Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="MouseOver"/>
                    <VisualState x:Name="Disabled"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="EditStates">
                    <VisualState x:Name="Editable"/>
                    <VisualState x:Name="Uneditable"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <ToggleButton x:Name="ToggleButton" Grid.Column="2" Template="{StaticResource ControlTemplate_ToggleButton1}" Focusable="False" ClickMode="Press"
                            IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
            <ContentPresenter x:Name="ContentSite" Margin="20,0" VerticalAlignment="Center" HorizontalAlignment="Left" IsHitTestVisible="False"
                            TextBlock.Foreground="{DynamicResource White}"
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}">
            </ContentPresenter>
            <TextBox x:Name="PART_EditableTextBox" Style="{x:Null}"
                            Margin="3,3,23,3" VerticalAlignment="Bottom" HorizontalAlignment="Left" Focusable="True" Background="Transparent" Visibility="Hidden"
                            Template="{StaticResource ControlTemplate_TextBox}"
                            IsReadOnly="{TemplateBinding IsReadOnly}" />
            <Popup x:Name="Popup" Placement="Bottom" Focusable="False" AllowsTransparency="True" PopupAnimation="Slide"
                            IsOpen="{TemplateBinding IsDropDownOpen}">
                <Grid x:Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                    <Border x:Name="DropDownBorder" BorderThickness="1">
                        <Border.BorderBrush>
                            <SolidColorBrush Color="{DynamicResource BorderMediumColor}" />
                        </Border.BorderBrush>
                        <Border.Background>
                            <SolidColorBrush Color="{DynamicResource ControlLightColor}" />
                        </Border.Background>
                    </Border>
                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                    </ScrollViewer>
                </Grid>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="HasItems" Value="false">
                <Setter TargetName="DropDownBorder"  Property="MinHeight" Value="95"/>
            </Trigger>
            <Trigger Property="IsGrouping" Value="true">
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </Trigger>
            <Trigger SourceName="Popup" Property="AllowsTransparency" Value="true">
                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="2" />
                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="ControlTemplate_ComboBox2" TargetType="{x:Type ComboBox}">
        <Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="MouseOver"/>
                    <VisualState x:Name="Disabled"/>
                </VisualStateGroup>
                <VisualStateGroup x:Name="EditStates">
                    <VisualState x:Name="Editable"/>
                    <VisualState x:Name="Uneditable"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <ToggleButton x:Name="ToggleButton" Grid.Column="2" Template="{StaticResource ControlTemplate_ToggleButton2}" Focusable="False" ClickMode="Press"
                            IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
            <ContentPresenter x:Name="ContentSite" Margin="10,3" VerticalAlignment="Center" HorizontalAlignment="Left" IsHitTestVisible="False"
                            TextBlock.Foreground="{DynamicResource White}"
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}">
            </ContentPresenter>
            <TextBox x:Name="PART_EditableTextBox" Style="{x:Null}"
                            Margin="3,3,23,3" VerticalAlignment="Bottom" HorizontalAlignment="Left" Focusable="True" Background="Transparent" Visibility="Hidden"
                            Template="{StaticResource ControlTemplate_TextBox}"
                            IsReadOnly="{TemplateBinding IsReadOnly}" />
            <Popup x:Name="Popup" Placement="Bottom" Focusable="False" AllowsTransparency="True" PopupAnimation="Slide"
                            IsOpen="{TemplateBinding IsDropDownOpen}">
                <Grid x:Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                    <Border x:Name="DropDownBorder" BorderThickness="1">
                        <Border.BorderBrush>
                            <SolidColorBrush Color="{DynamicResource BorderMediumColor}" />
                        </Border.BorderBrush>
                        <Border.Background>
                            <SolidColorBrush Color="{DynamicResource ControlLightColor}" />
                        </Border.Background>
                    </Border>
                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                    </ScrollViewer>
                </Grid>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="HasItems" Value="false">
                <Setter TargetName="DropDownBorder"  Property="MinHeight" Value="95"/>
            </Trigger>
            <Trigger Property="IsGrouping" Value="true">
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </Trigger>
            <Trigger SourceName="Popup" Property="AllowsTransparency" Value="true">
                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="2" />
                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--ControlTemplate ComboBoxItem-->
    <ControlTemplate x:Key="ControlTemplate_ComboBoxItem1" TargetType="{x:Type ComboBoxItem}">
        <Border x:Name="Border" Margin="0" Padding="20,11,0,11" SnapsToDevicePixels="True" Background="Transparent">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="Selected"/>
                    <VisualState x:Name="Disabled"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter Grid.Column="0"/>
                <Image Name="Image" Grid.Column="1" HorizontalAlignment="Right" Height="14" Width="14" Source="../Image/icon_pulldown_check_n.png" Visibility="Collapsed"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Visibility" TargetName="Image" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Panel.Background" TargetName="Border" Value="{DynamicResource Green}"/>
                <Setter Property="TextElement.Foreground" TargetName="Border" Value="{DynamicResource Obj_Foreground}"/>
                <Setter TargetName="Image" Property="Source" Value="../Image/icon_pulldown_check_hover.png"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="ControlTemplate_ComboBoxItem2" TargetType="{x:Type ComboBoxItem}">
        <Border x:Name="Border" Margin="0" Padding="3,0" SnapsToDevicePixels="True" Background="Transparent">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal"/>
                    <VisualState x:Name="Selected"/>
                    <VisualState x:Name="Disabled"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter Grid.Column="0"/>
                <Image Name="Image" Grid.Column="1" HorizontalAlignment="Right" Height="14" Width="14" Source="../Image/icon_pulldown_check_n.png" Visibility="Collapsed"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Visibility" TargetName="Image" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Panel.Background" TargetName="Border" Value="{DynamicResource Green}"/>
                <Setter Property="TextElement.Foreground" TargetName="Border" Value="{DynamicResource Obj_Foreground}"/>
                <Setter TargetName="Image" Property="Source" Value="../Image/icon_pulldown_check_hover.png"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ComboBoxItemStyle1" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Control.Template" Value="{DynamicResource ControlTemplate_ComboBoxItem1}"/>
    </Style>
    <Style x:Key="ComboBoxItemStyle2" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Control.Template" Value="{DynamicResource ControlTemplate_ComboBoxItem2}"/>
    </Style>

    <!--ComboBox-->
    <Style x:Key="ComboBoxStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="FrameworkElement.SnapsToDevicePixels" Value="True"/>
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="FrameworkElement.Margin" Value="0"/>
        <Setter Property="Control.Padding" Value="0"/>
        <Setter Property="Control.FontSize" Value="18"/>
        <Setter Property="Selector.DisplayMemberPath" Value="Text"/>
        <Setter Property="Selector.SelectedValuePath" Value="Value"/>
        <Setter Property="Selector.SelectedIndex" Value="0"/>
        <Setter Property="Control.Cursor" Value="Hand"/>
    </Style>
    <Style x:Key="ComboBoxStyle1" BasedOn="{StaticResource ComboBoxStyle}" TargetType="{x:Type ComboBox}">
        <Setter Property="FrameworkElement.Height" Value="54"/>
        <Setter Property="FrameworkElement.Width" Value="480"/>
        <Setter Property="Control.Template" Value="{DynamicResource ControlTemplate_ComboBox1}"/>
        <Setter Property="ItemContainerStyle" Value="{DynamicResource ComboBoxItemStyle1}"/>
    </Style>
    <Style x:Key="ComboBoxStyle2" BasedOn="{StaticResource ComboBoxStyle}" TargetType="{x:Type ComboBox}">
        <Setter Property="FrameworkElement.Height" Value="54"/>
        <Setter Property="FrameworkElement.Width" Value="480"/>
        <Setter Property="Control.Template" Value="{DynamicResource ControlTemplate_ComboBox2}"/>
        <Setter Property="ItemContainerStyle" Value="{DynamicResource ComboBoxItemStyle1}"/>
    </Style>
    <Style x:Key="ComboBoxStyle3" BasedOn="{StaticResource ComboBoxStyle}" TargetType="{x:Type ComboBox}">
        <Setter Property="FrameworkElement.Height" Value="28"/>
        <Setter Property="FrameworkElement.Width" Value="88"/>
        <Setter Property="Control.Template" Value="{DynamicResource ControlTemplate_ComboBox2}"/>
        <Setter Property="ItemContainerStyle" Value="{DynamicResource ComboBoxItemStyle2}"/>
    </Style>

    
    <!--==================== Object Draw ====================-->
    <!--Path-->
    <Style x:Key="PathStyle" TargetType="{x:Type Path}">
        <Setter Property="FrameworkElement.Visibility" Value="Collapsed"/>
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=Visibility,ElementName=ScrollViewer1}" Value="Visible"/>
                    <Condition Binding="{Binding Path=Visibility,ElementName=RegionalDetail}" Value="Visible"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="FrameworkElement.Visibility" Value="Visible"/>
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="PathStyle1" BasedOn="{StaticResource PathStyle}" TargetType="{x:Type Path}">
        <Setter Property="Shape.Fill" Value="#3CA7FF00"/>
        <Setter Property="Shape.Stroke" Value="#A7FF00"/>
        <Setter Property="Shape.StrokeThickness" Value="0.1"/>
    </Style>
    <Style x:Key="PathStyle2" BasedOn="{StaticResource PathStyle}" TargetType="{x:Type Path}">
        <Setter Property="Shape.Fill" Value="#0432FF"/>
        <Setter Property="Shape.Stroke" Value="#FFFFFF"/>
        <Setter Property="Shape.StrokeThickness" Value="0.05"/>
    </Style>


    <!--==================== Local Object ====================-->
    <!--TextPath-->
    <Style x:Key="TextPathStyle" TargetType="{x:Type local:TextPath}">
        <Setter Property="FrameworkElement.Margin" Value="40"/>
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Top"/>
        <Setter Property="FrameworkElement.HorizontalAlignment" Value="Left"/>
        <Setter Property="Shape.Fill" Value="#FFFFFF"/>
        <Setter Property="Shape.Stroke" Value="#000000"/>
        <Setter Property="Shape.StrokeThickness" Value="0.2"/>
        <Setter Property="Control.Visibility" Value="{Binding Path=Visibility,ElementName=Monitor}"/>
        <Setter Property="TextBlock.Text">
            <Setter.Value>
                <MultiBinding StringFormat="{}平均溫度 {0}  最高溫度 {1}  最低溫度 {2}  最大溫差 {3}  人數統計 {4}">
                    <Binding Path="Avg"/>
                    <Binding Path="High"/>
                    <Binding Path="Low"/>
                    <Binding Path="Diff"/>
                    <Binding Path="Person"/>
                </MultiBinding>
            </Setter.Value>
        </Setter>
    </Style>


    <!--TimeTextBox-->
    <Style x:Key="TimeTextBoxStyle" TargetType="{x:Type local:TimeTextBox}">
        <Setter Property="FrameworkElement.Height" Value="28"/>
        <Setter Property="FrameworkElement.Width" Value="88"/>
        <Setter Property="ObjBorderBrush" Value="{DynamicResource Obj_BorderBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource Obj_Foreground}"/>
        <Setter Property="FocusBrush" Value="{DynamicResource Green}"/>
        <Setter Property="ObjToggleSize" Value="28"/>
        <Setter Property="ImageSize" Value="6"/>
        <Setter Property="MaxValue" Value="86399"/>
        <Setter Property="MinValue" Value="0"/>
        <Setter Property="Value" Value="119"/>
        <Setter Property="SourceUp" Value="../Image/com_icon_arrow_up_n.png"/>
        <Setter Property="SourceDown" Value="../Image/com_icon_arrow_down_n.png"/>
    </Style>


    <!--PHTextBox-->
    <Style x:Key="PHTextBoxStyle" TargetType="{x:Type local:PHTextBox}">
        <Setter Property="ObjBorderBrush" Value="{DynamicResource Obj_BorderBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource Obj_Foreground}"/>
        <Setter Property="FocusBrush" Value="{DynamicResource Green}"/>
        <Setter Property="ObjToggleSize" Value="28"/>
    </Style>
    <Style x:Key="PHTextBoxStyle1" BasedOn="{StaticResource PHTextBoxStyle}" TargetType="{x:Type local:PHTextBox}">
        <Setter Property="FrameworkElement.Height" Value="54"/>
        <Setter Property="ImageSize" Value="14"/>
        <Setter Property="Source" Value="../Image/com_icon_empty_n.png"/>
    </Style>

    <Style x:Key="PHTextBoxStyle2" BasedOn="{StaticResource PHTextBoxStyle}" TargetType="{x:Type local:PHTextBox}">
        <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
        <Setter Property="FrameworkElement.Height" Value="28"/>
        <Setter Property="FrameworkElement.Width" Value="88"/>
        <Setter Property="Control.FontSize" Value="14"/>
        <Setter Property="ImageSize" Value="14"/>
        <Setter Property="Source" Value="../Image/com_icon_empty_n.png"/>
    </Style>
    <Style x:Key="PHTextBoxStyle3" BasedOn="{StaticResource PHTextBoxStyle}" TargetType="{x:Type local:PHTextBox}">
        <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
        <Setter Property="FrameworkElement.Height" Value="28"/>
        <Setter Property="FrameworkElement.Width" Value="88"/>
        <Setter Property="ObjBackground" Value="#2B3763"/>
        <Setter Property="ImageSize" Value="14"/>
        <Setter Property="Source" Value="../Image/com_icon_empty_n.png"/>
    </Style>


    <!--==================== PromptBox ====================-->
    <!--PromptBox-->
    <Style x:Key="PromptBoxStyle" TargetType="{x:Type local:PromptBox}">
        <Setter Property="FrameworkElement.Width" Value="300"/>
        <Setter Property="Source" Value="../Image/icon_error.png"/>
        <Setter Property="ObjText" Value="Wifi 連線異常"/>
        <Setter Property="ObjForeground" Value="{DynamicResource PromptBox_Foreground}"/>
        <Setter Property="BtnForeground1" Value="{DynamicResource PromptBox_BtnForeground}"/>
        <Setter Property="IsConfirm1" Value="False"/>
        <Setter Property="IsConfirm2" Value="False"/>
    </Style>
    <Style x:Key="PromptBoxStyle1" BasedOn="{StaticResource PromptBoxStyle}" TargetType="{x:Type local:PromptBox}">
        <Setter Property="Source" Value="../Image/icon_succeed.png"/>
        <Setter Property="ObjText" Value="已保存"/>
        <Setter Property="IsConfirm1" Value="False"/>
        <Setter Property="IsConfirm2" Value="False"/>
    </Style>
    <Style x:Key="PromptBoxStyle2" BasedOn="{StaticResource PromptBoxStyle}" TargetType="{x:Type local:PromptBox}">
        <Setter Property="Source" Value="../Image/icon_error.png"/>
        <Setter Property="ObjText" Value="取消"/>
        <Setter Property="ObjForeground" Value="{DynamicResource PromptBox_Foreground}"/>
        <Setter Property="BtnForeground1" Value="{DynamicResource PromptBox_BtnForeground}"/>
        <Setter Property="IsConfirm1" Value="False"/>
        <Setter Property="IsConfirm2" Value="True"/>
    </Style>


    <!--==================== Device ====================-->
    <!--Device-->
    <Style x:Key="DeviceStyle" TargetType="{x:Type local:Device}">
        <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center"/>
        <Setter Property="MinWidth" Value="600"/>
    </Style>
</ResourceDictionary>